!function(t){var e={};function i(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=t,i.c=e,i.d=function(t,e,o){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)i.d(o,n,function(e){return t[e]}.bind(null,n));return o},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";i.r(e);const o={template:'\n        <div class=\'todo-list-container\'>\n            <h1>To Do</h1>\n            <p>{{vm.logList()}}</p>\n            <p>{{vm.test}}</p>\n            <ng-transclude></ng-transclude>\n            <ul class="to-do-list">\n                <li ng-repeat="item in vm.list" class="list-item">\n                    <p>{{item.title}}    <button ng-click="vm.deleteItem(item.id)">X</button></p>\n                </li>\n            </ul>\n            <p><input ng-model="vm.newList" type="text"/></p>\n            <button ng-click="vm.addToList(vm.newList)">Add New</button>\n        </div>',controller:class{constructor(t){this.GetToDoService=t,this.list=this.GetToDoService.toDoList,this.test="Is this working?",this.addToList=(t=>this.GetToDoService.addToList(t)),this.deleteItem=(t=>this.GetToDoService.deleteItem(t))}static get $inject(){return["GetToDoService"]}},controllerAs:"vm",transclude:!0};class n{constructor(t){this.GetToDoService=t,this.list=this.GetToDoService.completedList}}n.$inject=["GetToDoService"];const s={template:'\n        <div class=\'complete-list-container\'>\n            <h2>Completed Tasks</h2>\n            <ul class="completed-task-list">\n                <li ng-repeat="item in vm.list" class="completed-list-item">\n                    <p>{{item.title}}</p>\n                </li>\n            </ul>\n        </div>',controller:n,controllerAs:"vm"};class l{constructor(){this.toDoList=[{id:0,title:"item 1"},{id:1,title:"item 2"},{id:2,title:"item 3"}],this.completedList=[{id:500,title:"complete"}]}getList(){return this.toDoList}addToList(t){let e={id:this.toDoList.length>0?this.toDoList[this.toDoList.length-1].id+1:0,title:t};this.toDoList.push(e)}deleteItem(t){for(let e=0;e<this.toDoList.length;e++)if(this.toDoList[e].id===t){this.completedList.push(this.toDoList[e]),this.toDoList.splice(e,1);break}}}console.log(l),angular.module("App",[]).service("GetToDoService",l).component("toDoList",o).component("completeList",s)}]);